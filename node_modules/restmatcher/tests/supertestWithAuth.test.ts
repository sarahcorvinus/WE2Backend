import express from 'express';
import { Test } from 'supertest';
import { supertestWithReqMiddleware } from '../src/supertestWithReqMiddleware';

const app = express();
app.get("/path", (req, res) => { res.send({ value: req.headers.authorization }); });
function authenticator(req: Test) { return req.set('Authorization', `Bearer THIS_IS_NOT_A_REAL_TOKEN`); }

test("Middleware with async/await", async () => {
    const testee = supertestWithReqMiddleware(app, authenticator);
    const response = await testee.get("/path");
    expect(response.body).toMatchObject({ value: "Bearer THIS_IS_NOT_A_REAL_TOKEN" });
})

test("Middleware with callback", (done) => {
    const testee = supertestWithReqMiddleware(app, authenticator);
    testee.get("/path").end((_err, response) => {
        expect(response.body).toMatchObject({ value: "Bearer THIS_IS_NOT_A_REAL_TOKEN" });
        done()
    });
})

test("Authentication wrapper with async/await", async () => {
    function supertestWithAuth(app: express.Express) {
        return supertestWithReqMiddleware(app, authenticator);
    }

    const testee = supertestWithAuth(app);
    const response = await testee.get("/path");
    expect(response.body).toMatchObject({ value: "Bearer THIS_IS_NOT_A_REAL_TOKEN" });
})